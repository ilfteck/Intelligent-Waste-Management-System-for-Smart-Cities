{"remainingRequest":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\huishouYuyue\\list.vue?vue&type=template&id=7350cde5&scoped=true","dependencies":[{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\huishouYuyue\\list.vue","mtime":1714703635594},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}