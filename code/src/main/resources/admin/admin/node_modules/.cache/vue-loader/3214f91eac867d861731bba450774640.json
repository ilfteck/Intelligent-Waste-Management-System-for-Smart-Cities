{"remainingRequest":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\chuku\\add-or-update.vue?vue&type=template&id=5b2c7ee0","dependencies":[{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\chuku\\add-or-update.vue","mtime":1679375766003},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"J:\\customer\\基于web的垃圾分类回收系统代码\\garbage-sorting-and-recycling-system\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}